[
  {
    "name": "One-line node modules",
    "url": "https://github.com/sindresorhus/ama/issues/10"
  },
  {
    "name": "Build small single purpose modules",
    "url": "http://thenodeway.io/introduction/#build-small-single-purpose-modules"
  },
  {
    "name": "Module best practices",
    "url": "https://github.com/mattdesl/module-best-practices"
  },
  {
    "name": "Evaluating Packages Part 1",
    "url": "http://bytearcher.com/articles/evaluating-packages-1-check-community/",
    "description": "Turn to community "
  },
  {
    "name": "Evaluating Packages Part 2",
    "url": "http://bytearcher.com/articles/evaluating-packages-2-review-repository/",
    "description": "Review repository"
  },
  {
    "name": "is-sorted",
    "url": "https://github.com/dcousens/is-sorted",
    "description": "A small module to check if an Array is sorted."
  },
  {
    "name": "array-first",
    "url": "https://github.com/jonschlinkert/array-first",
    "description": "Get the first element or first n elements of an array."
  },
  {
    "name": "array-last",
    "url": "https://github.com/jonschlinkert/array-last",
    "description": "Return the last element in an array."
  },
  {
    "name": "arr-flatten",
    "url": "https://github.com/jonschlinkert/arr-flatten",
    "description": "Recursively flatten an array or arrays."
  },
  {
    "name": "dedupe",
    "url": "https://github.com/seriousManual/dedupe",
    "description": "Remove duplicates from an array."
  },
  {
    "name": "array-range",
    "url": "https://github.com/mattdesl/array-range",
    "description": "Creates a new array with given range."
  },
  {
    "name": "arr-diff",
    "url": "https://github.com/jonschlinkert/arr-diff",
    "description": "Returns an array with only the unique values from the first array, by excluding all values from additional arrays using strict equality for comparisons."
  },
  {
    "name": "filled-array",
    "url": "https://github.com/sindresorhus/filled-array",
    "description": "Returns an array filled with the specified input"
  },
  {
    "name": "map-array",
    "url": "https://github.com/parro-it/map-array",
    "description": "Map object keys and values into an array."
  },
  {
    "name": "decamelize",
    "url": "https://github.com/sindresorhus/decamelize",
    "description": "Convert a camelized string into a lowercased one with a custom separator: unicornRainbow → unicorn_rainbow."
  },
  {
    "name": "to-camel-case",
    "url": "https://github.com/ianstormtaylor/to-camel-case",
    "description": "Convert a string to a camel case."
  },
  {
    "name": "to-capital-case",
    "url": "https://github.com/ianstormtaylor/to-capital-case",
    "description": "Convert a string to a capital case."
  },
  {
    "name": "to-constant-case",
    "url": "https://github.com/ianstormtaylor/to-constant-case",
    "description": "Convert a string to a constant case."
  },
  {
    "name": "to-dot-case",
    "url": "https://github.com/ianstormtaylor/to-dot-case",
    "description": "Convert a string to a dot case."
  },
  {
    "name": "to-no-case",
    "url": "https://github.com/ianstormtaylor/to-no-case",
    "description": "Remove an existing case from a string."
  },
  {
    "name": "to-pascal-case",
    "url": "https://github.com/ianstormtaylor/to-pascal-case",
    "description": "Convert a string to a pascal case."
  },
  {
    "name": "to-sentence-case",
    "url": "https://github.com/ianstormtaylor/to-sentence-case",
    "description": "Convert a string to a sentence case."
  },
  {
    "name": "to-slug-case",
    "url": "https://github.com/ianstormtaylor/to-slug-case",
    "description": "Convert a string to a slug case."
  },
  {
    "name": "to-snake-case",
    "url": "https://github.com/ianstormtaylor/to-snake-case",
    "description": "Convert a string to a snake case."
  },
  {
    "name": "to-space-case",
    "url": "https://github.com/ianstormtaylor/to-space-case",
    "description": "Convert a string to a space case."
  },
  {
    "name": "to-title-case",
    "url": "https://github.com/ianstormtaylor/to-title-case",
    "description": "Convert a string to a title case."
  },
  {
    "name": "pretty-ms",
    "url": "https://github.com/sindresorhus/pretty-ms",
    "description": "Convert milliseconds to a human readable string: 1337000000 → 15d 11h 23m 20s."
  },
  {
    "name": "hirestime",
    "url": "https://github.com/seriousManual/hirestime",
    "description": "A wrapper around the built-in high resolution timer which simplifies the calculation of timestamps."
  },
  {
    "name": "periods",
    "url": "https://github.com/timruffles/periods",
    "description": "Defined time-periods constants for Javascript, in milliseconds."
  },
  {
    "name": "fecha",
    "url": "https://github.com/taylorhakes/fecha",
    "description": "Javascript Date formatting and parsing."
  },
  {
    "name": "map-obj",
    "url": "https://github.com/sindresorhus/map-obj",
    "description": "Map object keys and values into a new object."
  },
  {
    "name": "filter-obj",
    "url": "https://github.com/sindresorhus/filter-obj",
    "description": "Filter object keys and values into a new object."
  },
  {
    "name": "object-values",
    "url": "https://github.com/sindresorhus/object-values",
    "description": "Get the values of an object."
  },
  {
    "name": "object-pairs",
    "url": "https://github.com/eush77/object-pairs",
    "description": "Turn an object into list of [key, value] pairs for mapping, iterating or other purposes."
  },
  {
    "name": "zipmap",
    "url": "https://github.com/landau/zipmap",
    "description": "Returns a map with the keys mapped to the corresponding vals. zipmap also accepts a single value of objects or pairs."
  },
  {
    "name": "just-pluck",
    "url": "https://github.com/jarofghosts/just-pluck",
    "description": "Pluck without the madness."
  },
  {
    "name": "deep-equal",
    "url": "https://github.com/substack/node-deep-equal",
    "description": "Node's assert.deepEqual() algorithm as a standalone module."
  },
  {
    "name": "deep-assign",
    "url": "https://github.com/sindresorhus/deep-assign",
    "description": "Recursive Object.assign()."
  },
  {
    "name": "set-value",
    "url": "https://github.com/jonschlinkert/set-value",
    "description": "Create nested values and any intermediaries dot notation ('a.b.c') paths."
  },
  {
    "name": "get-value",
    "url": "https://github.com/jonschlinkert/get-value",
    "description": "Use property paths (a.b.c) to get a nested value from an object."
  },
  {
    "name": "has-value",
    "url": "https://github.com/jonschlinkert/has-value",
    "description": "Returns true if a value exists, false if empty. Works with deeply nested values using dot notation ('a.b.c') paths."
  },
  {
    "name": "flatkeys",
    "url": "https://github.com/ricardobeat/flatkeys",
    "description": "Flatten object key hierarchies into a list of strings using a custom separator."
  },
  {
    "name": "flatten-obj",
    "url": "https://github.com/watson/flatten-obj",
    "description": "Converts an object literal with deeply nested nodes to a simple key/value object."
  },
  {
    "name": "is-empty-object",
    "url": "https://github.com/gummesson/is-empty-object",
    "description": "Check if an object is empty."
  },
  {
    "name": "stringify-object",
    "url": "https://github.com/yeoman/stringify-object",
    "description": "Stringify an object/array like JSON.stringify just without all the double-quotes."
  },
  {
    "name": "compose-function",
    "url": "https://github.com/stoeffel/compose-function",
    "description": "Compose a new function from smaller functions `f(g(x))."
  },
  {
    "name": "curry",
    "url": "https://github.com/dominictarr/curry",
    "description": "A curry function without anything too clever."
  },
  {
    "name": "once",
    "url": "https://github.com/isaacs/once",
    "description": "Run a function exactly one time."
  },
  {
    "name": "deep-bind",
    "url": "https://github.com/jonschlinkert/deep-bind",
    "description": "Bind a context to all functions in an object, including deeply nested functions."
  },
  {
    "name": "identity-function",
    "url": "https://github.com/substack/identity-function",
    "description": "Always return the input argument. "
  },
  {
    "name": "mem",
    "url": "https://github.com/sindresorhus/mem",
    "description": "An optimization technique used to speed up consecutive function calls by caching the result of calls with identical input."
  },
  {
    "name": "through2",
    "url": "https://github.com/rvagg/through2",
    "description": "Tiny wrapper around Node streams2 Transform to avoid explicit subclassing noise."
  },
  {
    "name": "through2-filter",
    "url": "https://github.com/brycebaril/through2-filter",
    "description": "A through2 to create an Array.prototype.filter analog for streams."
  },
  {
    "name": "through2-map",
    "url": "https://github.com/brycebaril/through2-map",
    "description": "A through2 to create an Array.prototype.map analog for streams."
  },
  {
    "name": "stream-spigot",
    "url": "https://github.com/brycebaril/node-stream-spigot",
    "description": "A readable stream generator, useful for testing or converting simple functions into Readable streams."
  },
  {
    "name": "concat-stream",
    "url": "https://github.com/maxogden/concat-stream",
    "description": "writable stream that concatenates strings or data and calls a callback with the result."
  },
  {
    "name": "JSONStream",
    "url": "https://github.com/dominictarr/JSONStream",
    "description": "streaming JSON.parse and stringify"
  },
  {
    "name": "thenify",
    "url": "https://github.com/thenables/thenify",
    "description": "Promisify a callback-based function."
  },
  {
    "name": "rimraf",
    "url": "https://github.com/isaacs/rimraf",
    "description": "A deep deletion module for node (like rm -rf)."
  },
  {
    "name": "mkdirp",
    "url": "https://github.com/substack/node-mkdirp",
    "description": "Recursively mkdir, like mkdir -p."
  },
  {
    "name": "du",
    "url": "https://github.com/rvagg/node-du",
    "description": "A simple JavaScript implementation of du -sb."
  },
  {
    "name": "file-size",
    "url": "https://github.com/Nijikokun/file-size",
    "description": "Lightweight filesize to human-readable / proportions w/o dependencies."
  },
  {
    "name": "tmp",
    "url": "https://github.com/raszi/node-tmp",
    "description": "Temporary file and directory creator for node.js."
  },
  {
    "name": "fs-promise",
    "url": "https://github.com/kevinbeaty/fs-promise",
    "description": "Node fs methods as Promise/A+ (optional fs-extra, graceful-fs)."
  },
  {
    "name": "delegate",
    "url": "https://github.com/zenorocha/delegate",
    "description": "Lightweight event delegation."
  },
  {
    "name": "insert-css",
    "url": "https://github.com/substack/insert-css",
    "description": "Insert a string of css into the head"
  },
  {
    "name": "dom-element-value",
    "url": "https://github.com/crysalead-js/dom-element-value",
    "description": "DOM element value getter/setter."
  },
  {
    "name": "semver",
    "url": "https://github.com/npm/node-semver",
    "description": "The semantic version parser used by npm."
  },
  {
    "name": "semver-max",
    "url": "https://github.com/eush77/semver-max",
    "description": "Find maximum (or minimum) version according to semver."
  },
  {
    "name": "semver-first-satisfied",
    "url": "https://github.com/parro-it/semver-first-satisfied",
    "description": "Find minimum in an array of version that satisfies a semver range."
  },
  {
    "name": "abbrev",
    "url": "https://github.com/isaacs/abbrev-js",
    "description": "Calculate the set of unique abbreviations for a given set of strings."
  },
  {
    "name": "glob",
    "url": "https://github.com/isaacs/node-glob",
    "description": "Glob functionality for node.js."
  },
  {
    "name": "username",
    "url": "https://github.com/sindresorhus/username",
    "description": "Get the username of the current user."
  },
  {
    "name": "pkg-conf",
    "url": "https://github.com/sindresorhus/pkg-conf",
    "description": "Get namespaced config from the closest package.json."
  },
  {
    "name": "normalize-pkg",
    "url": "https://github.com/jonschlinkert/normalize-pkg",
    "description": "Normalize values in package.json to improve compatibility, programmatic readability and usefulness with third party libs."
  },
  {
    "name": "node-uuid",
    "url": "https://github.com/broofa/node-uuid",
    "description": "Generate RFC-compliant UUIDs in JavaScript."
  },
  {
    "name": "node-mime",
    "url": "https://github.com/broofa/node-mime",
    "description": "Comprehensive MIME type mapping API based on mime-db module."
  },
  {
    "name": "awesome-nodejs",
    "url": "https://github.com/sindresorhus/awesome-nodejs",
    "description": "A curated list of delightful Node.js packages and resources."
  },
  {
    "name": "awesome-npm",
    "url": "https://github.com/sindresorhus/awesome-npm",
    "description": "Awesome npm resources and tips."
  }
]
